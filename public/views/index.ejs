<!DOCTYPE html>
<html lang="fr">
<head>
    <title>Cards</title>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <link rel="stylesheet" href="/stylesheets/css.css" />

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
</head>
<body>
<div class="container-fluid" id="menu">
    <div class="row" style="height: 100%;">
        <!-- Colonne principale gauche -->
        <div class="col-sm-4">
        </div>
        <!-- Colonne principale centrale -->
        <div class="col-sm-4" style="height: 100%;">
            <!-- Image logo -->
            <img src="images/title.png" class="mx-auto d-block">
            <!-- Texte logo -->
            <div class="centered">
                <p id="title">CARDS</p>
            </div>
            <div class="row">
                <!-- Colonne secondaire gauche -->
                <div class="col-sm-2">
                </div>
                <!-- Colonne secondaire centrale -->
                <div class="col-sm-8">
                    <!-- Formulaire pseudo + creer/rejoindre partie -->
                    <form id="formBtnsMenu">
                        <!-- Pseudo -->
                        <div id="inputPseudo" class="input-group mb-3">
                            <!-- Logo bonhomme -->
                            <div class="input-group-prepend">
                        <span class="input-group-text">
                          <i class="material-icons">
                            perm_identity
                          </i>
                        </span>
                            </div>
                            <!-- Input pseudo -->
                            <input type="text" id="pseudo" class="form-control" placeholder="Pseudo">
                        </div>
                        <!-- Affichage pseudo -->
                        <button type="button" class="btn btn-secondary" id="affichagePseudo" style="display: none;" disabled>
                        </button>
                        <!-- Boutons creer/rejoindre -->
                        <button id="creationBtn" class="create btn mb-3 btn-danger">Créer une partie</button>
                        <button id="rejoindreBtn" class="create btn mb-3 btn-danger">Rejoindre une partie</button>
                    </form>
                    <!-- Boutons inscription/connexion -->
                    <div class="button-container mb-3" id="btnsInscrCo">
                        <button id="inscriptionBtn" class="signin btn btn-danger">Inscription</button>
                        <button id="connexionBtn" class="login btn btn-danger">Connexion</button>
                    </div>
                    <!-- Formulaire inscription -->
                    <form id="inscription">
                        <!-- Pseudo -->
                        <div class="input-group mb-3">
                            <!-- Logo bonhomme -->
                            <div class="input-group-prepend">
							<span class="input-group-text">
								<i class="material-icons">
									perm_identity
								</i>
							</span>
                            </div>
                            <!-- Input pseudo -->
                            <input type="text" id="pseudoInscription" class="form-control" placeholder="Pseudo">
                        </div>
                        <!-- Email -->
                        <div class="input-group mb-3">
                            <!-- Logo email -->
                            <div class="input-group-prepend">
							<span class="input-group-text">
								<i class="material-icons">
									alternate_email
								</i>
							</span>
                            </div>
                            <!-- Input email -->
                            <input type="text" id="email" class="form-control" placeholder="Email">
                        </div>
                        <!-- Mot de passe -->
                        <div class="input-group mb-3">
                            <!-- Logo cadenas -->
                            <div class="input-group-prepend">
							<span class="input-group-text">
								<i class="material-icons">
									lock
								</i>
							</span>
                            </div>
                            <!-- Input mot de passe -->
                            <input type="password" id="pwd" class="form-control" placeholder="Mot de passe">
                        </div>
                        <!-- Confirmation mot de passe -->
                        <div class="input-group mb-3">
                            <!-- Logo cadenas -->
                            <div class="input-group-prepend">
							<span class="input-group-text">
								<i class="material-icons">
									lock
								</i>
							</span>
                            </div>
                            <!-- Input confirmation mot de passe -->
                            <input type="password" id="conf_pwd" class="form-control" placeholder="Confirmation mot de passe">
                        </div>
                        <!-- Bouton valider -->
                        <button type="submit" class="validate btn btn-danger">Valider</button>
                    </form>
                    <!-- Formulaire connexion -->
                    <form id="connexion">
                        <!-- Email -->
                        <div class="input-group mb-3">
                            <!-- Logo email -->
                            <div class="input-group-prepend">
                        <span class="input-group-text">
                          <i class="material-icons">
                            alternate_email
                          </i>
                        </span>
                            </div>
                            <!-- Input email -->
                            <input type="text" id="email_con" class="form-control" placeholder="Email">
                        </div>
                        <!-- Mot de passe -->
                        <div class="input-group mb-3">
                            <!-- Logo cadenas -->
                            <div class="input-group-prepend">
                        <span class="input-group-text">
                          <i class="material-icons">
                            lock
                          </i>
                        </span>
                            </div>
                            <!-- Input mot de passe -->
                            <input type="password" id="pwd_con" class="form-control" placeholder="Mot de passe">
                        </div>
                        <!-- Boutons mot de passe oublié/valider -->
                        <div id="button-container mb-3">
                            <button type="submit" class="forgot btn">Mot de passe oublié ?</button>
                            <button type="submit" class="login btn btn-danger">Valider</button>
                        </div>
                    </form>
                    <!-- Formulaire confirmation -->
                    <form id="confirmation" style="display:none">
                        <!-- Code confirmation -->
                        <div class="input-group mb-3">
                            <!-- Logo cadenas -->
                            <div class="input-group-prepend">
							<span class="input-group-text">
								<i class="material-icons">
									lock
								</i>
							</span>
                            </div>
                            <!-- Input code confirmation -->
                            <input type="text" id="codeConfirmation" class="form-control" placeholder="Code de confirmation">
                        </div>
                        <!-- Bouton valider -->
                        <button type="submit" class="validate btn btn-danger">Valider</button>
                    </form>
                </div>
                <!-- Colonne secondaire droite -->
                <div class="col-sm-2">
                </div>
            </div>
        </div>
        <!-- Colonne principale droite -->
        <div class="col-sm-4">
            <!-- Formulaire creation partie -->
            <form id="creation">
                <!-- Nom de la partie -->
                <div class="input-group mb-3">
                    <!-- Texte nom de la partie -->
                    <div class="input-group-prepend">
                    <span class="input-group-text">
                      Nom de la partie
                    </span>
                    </div>
                    <!-- Choix type de jeu -->
                    <input type="text" id="gameName" class="form-control" placeholder="Ex : ma partie" required>
                </div>
                <!-- Type de jeu -->
                <div class="input-group mb-3">
                    <!-- Texte type de jeu -->
                    <div class="input-group-prepend">
                    <span class="input-group-text">
                      Type de jeu
                    </span>
                    </div>
                    <!-- Choix type de jeu -->
                    <select class="form-control">
                        <option>Blitz</option>
                    </select>
                </div>
                <!-- Nombre de joueurs -->
                <div class="input-group mb-3">
                    <!-- Texte nombre de joueurs -->
                    <div class="input-group-prepend">
                    <span class="input-group-text">
                      Nombre de joueurs
                    </span>
                    </div>
                    <!-- Choix nombre de joueurs -->
                    <select class="form-control" id="nbPlayersMax">
                        <option>2</option>
                        <option>3</option>
                        <option>4</option>
                        <option>5</option>
                        <option>6</option>
                    </select>
                </div>
                <!-- Chat -->
                <div class="input-group mb-3">
                    <!-- Texte chat -->
                    <div class="input-group-prepend">
                    <span class="input-group-text">
                      Chat
                    </span>
                    </div>
                    <!-- Choix chat -->
                    <select class="form-control">
                        <option>Oui</option>
                        <option>Non</option>
                    </select>
                </div>
                <!-- Style de cartes -->
                <div class="input-group mb-3">
                    <!-- Texte style de cartes -->
                    <div class="input-group-prepend">
                    <span class="input-group-text">
                      Style de cartes
                    </span>
                    </div>
                    <!-- Choix style de cartes -->
                    <select class="form-control">
                        <option>Classique</option>
                        <option>Future</option>
                    </select>
                </div>
                <!-- Bouton valider -->
                <button type="submit" class="validate btn btn-danger">Valider</button>
            </form>
            <!-- Tableau rejoindre partie -->
            <table class="table rounded" id="rejoindre">
                <tr>
                    <th id="nomPartie">Nom</th>
                    <th id="joueurs">Joueurs</th>
                    <th id="btnRejoindre"></th>
                </tr>
            </table>
        </div>
    </div>
</div>

<div class="container-fluid" id="board" style="display:none">
    <div class="row" style="height: 100%;">
        <div class="col-sm-8">
        </div>
        <div class="col-sm-1">
        </div>
        <div class="col-sm-3 chat-window" id="chat_window_1">
            <div class="row" id="chat_row">
                <div class="col-sm-2">
                </div>
                <div class="col-sm-1">
                </div>
                <div class="col-sm-9">
                    <div class="panel panel-default" id="chat" ><!--style="display:none">-->
                        <div class="panel-heading top-bar">
                            <div class="col-sm-12">
                                <h3 class="panel-title"><span class="glyphicon glyphicon-comment"></span> Chat de la partie</h3>
                            </div>
                        </div>
                        <div class="panel-body msg_container_base" id="messages">

                        </div>
                    </div>
                    <div class="panel-footer">
                        <div class="input-group">
                            <form id="formSendMessage" style="width: 100%;">
                                <div class="input-group">
                                    <input class="form-control" id="message" placeholder="Message..." />
                                    <input type="submit" value="Envoyer" id="envoyerMessage" class="btn btn-primary active" />
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/notify/0.4.2/notify.min.js"></script>
<script src="/socket.io/socket.io.js"></script>
<script>
    var socket = io.connect('localhost:8080'); // online : 'https://jeudecarte.alwaysdata.net/', {secure:true} - local : localhost:8080
    var pseudo = "";

    var connexionDisplayed = false; // état du menu de connexion
    var inscriptionDisplayed = false; // état du menu d'inscription
    var creationDisplayed = false; // état du menu de création de partie
    var rejoindreDisplayed = false; // état du menu des parties en cours
    var confirmationDisplayed = false;

    var isConnected = false; // pour le moment à false, il faudra le gérer après avec des cookies je pense.

    var actualGameName = ""; // nom de la partie acutelle jouée


    /*
        --------------- FUNCTIONS ---------------
    */


    /*
        Renvoie true si l'input correspondant au pseudo d'invité est rempli, et assigne à la var pseudo
        la valeur correspondante.
    */

    function hasGuestPseudo() {
        if ($("#pseudo").val().length == 0) {
            $.notify("Renseignez votre pseudo guest ou connectez vous !", "warn");
            return false;
        }
        else if ($("#pseudo").val().length >= 20) {
            $.notify("Votre pseudo est un peu trop long !", "warn");
            return false;
        }

        pseudo = "guest_" + $("#pseudo").val();
        return true;
    }


    /*
        Renvoie true si le joueur est connecté ou s'il a choisi un pseudo d'invité (ce qui signifie
        que l'input correspondant au pseudo d'invité est rempli).
    */

    function hasPseudo() {
        return isConnected || hasGuestPseudo();
    }


    /*
        Fonction utilisée afin de gérer le menu principal : par exemple, l'ouverture
        du menu de création de partie provoque la fermeture de celui destiné à rejoindre
        une partie.
    */

    function displayMenu(action) {
        switch (action) {
            case "connexion":
                if (!connexionDisplayed) {
                    if (inscriptionDisplayed) {
                        displayMenu("inscription");
                    }

                    $("#connexion").show();
                    connexionDisplayed = true;
                }
                else {
                    $("#connexion").hide();
                    connexionDisplayed = false;
                }
                break;

            case "inscription":
                if (!inscriptionDisplayed) {
                    if (connexionDisplayed) {
                        displayMenu("connexion");
                    }

                    $("#inscription").show();
                    inscriptionDisplayed = true;
                }
                else {
                    $("#inscription").hide();
                    inscriptionDisplayed = false;
                }
                break;

            case "creation":
                if (!creationDisplayed) {
                    if (rejoindreDisplayed) {
                        displayMenu("rejoindre");
                    }

                    $("#creation").show();
                    creationDisplayed = true;
                }
                else {
                    $("#creation").hide();
                    creationDisplayed = false;
                }
                break;

            case "rejoindre":
                if (!rejoindreDisplayed) {
                    if (creationDisplayed) {
                        displayMenu("creation");
                    }

                    socket.emit("askGames");
                    $("#rejoindre").show();
                    rejoindreDisplayed = true;
                }
                else {
                    $("#rejoindre").hide();
                    $('.gameTr').remove();
                    rejoindreDisplayed = false;
                }
                break;

            case "confirmation":
                if (!confirmationDisplayed) {
                    if (creationDisplayed) {
                        displayMenu("creation");
                    }
                    if (inscriptionDisplayed) {
                        displayMenu("inscription");
                    }

                    $("#confirmation").show();
                    confirmationDisplayed = true;
                }
                else {
                    $("#confirmation").hide();
                    confirmationDisplayed = false;
                }
                break;
        }
    }


    /*
        Fonction appelée lorsque le bouton "rejoindre" est sollicité. Émet par conséquent au serveur
        un event "joinGame" signifiant qu'une personne a rejoint une partie, et lui envoyant les informations
        de cette partie contenues dans les attributs du bouton que sont "gameName", "nbPlayers" et "nbPlayersMax".
    */

    function joinGame () {
        if (hasPseudo()) {
            $("#menu").fadeOut(function() {
                $("#board").fadeIn();
            });

            actualGameName = $(this).attr("gameName");

            socket.emit("joinGame", { gameName: $(this).attr("gameName"),
                nbPlayers: $(this).attr("nbPlayers"),
                nbPlayersMax: $(this).attr("nbPlayersMax"),
                pseudo: pseudo });
        }
    };


    /*
        Fonction appelée lorqu'il est nécessaire de rajouter une partie à la liste des parties. L'idée est que
        un tableau avec des lignes (tr) et des colonnes (td) est utilisé. Il y a 3 colonnes, utilisées
        respectivement pour le nom de la partie, le nombre de joueurs et le placement du bouton rejoindre.

        A noter que l'id de chaque ligne est le nom de la partie, chose qui nous servira plus tard afin
        d'identifier chacunes des lignes et de récupérer des informations.

        De plus, les informations de la parties sont "stockées" dans les attributs du boutons, de telle sorte que
        lorsque ce-dernier est utilisé, nous puissions récupérer les différentes informations en faisant appel
        à $(this).attr("nomAttributARecup").
    */

    function appendGame (gameName, nbPlayers, nbPlayersMax) {
        let tr = $('<tr />').attr('id', gameName)
            .attr('class', "gameTr");

        let tdGamename = $('<td />');
        tr.append(tdGamename.html(gameName));

        let tdNbPlayers = $('<td />');
        tr.append(tdNbPlayers.html(nbPlayers + "/" + nbPlayersMax));

        let i = $('<i />').html("play_arrow")
            .attr("class", "material-icons");
        let button = $('<button />');

        button.append(i);

        if (nbPlayers == nbPlayersMax) {
            button.attr("disabled", true)
                .attr("class", "validate btn btn-secondary")
        }
        else {
            button.attr("class", "validate btn btn-danger")
        }

        let tdButton = $('<td />');
        tr.append(tdButton.append(button.attr("gameName", gameName)
            .attr("nbPlayersMax", nbPlayersMax.toString())
            .attr("nbPlayers", nbPlayers)
            .click(joinGame)));

        $('#rejoindre').append(tr);
    };


    /*
        Fonction appelée lorsqu'un message doit être affiché dans le chat, dans le cas d'un event "newMessage".
        Ce-dernier est simplement append dans le chat qui a ici pour id "messages".
    */

    function appendMessage (pseudo, message, isNewPlayer) {
        let div1 = $('<div />').attr("class", "row msg_container base_receive");
        let div2 = $('<div />').attr("class", "col-sm-12");
        let div3 = $('<div />').attr("class", "messages msg_receive");

        if (!isNewPlayer) {
            div3.append("<p><b>" + pseudo + "</b> : " + message + "</p>");
        }
        else {
            div3.append("<p>Le joueur <b>" + pseudo + "</b> vient de se connecter !</p>");
        }

        div2.append(div3);
        div1.append(div2);

        $('#messages').append(div1);
    };


    /*
        Fonction permettant de modifier les informations sur une game lorsque par exemple un nouveau joueur a rejoint
        la partie, ou que cette-dernière est pleine et qu'il est nécessaire de al rendre inacessible a plus de joueurs.

        L'idée est que seules les deux dernières colonnes sont à modifier. En effet, le nom de la partie qui est la première
        colonne ne changera pas. Cependant, la deuxième colonne, qui est le nombre de joueurs, doit être modifié à chaque connexion
        de joueurs. Enfin, la dernière colonne, qui est celle du bouton, doit être également modifiée. En effet, le bouton contient
        dans ses attributs les informations de la partie, et il est donc nécessaire de modifier le nombre de joueurs.
    */

    function updateGameDatas (gameName, nbPlayers, nbPlayersMax) {
        tr = "#" + gameName;
        index = 0;

        $(tr).find('td').each(function() {
            if (index == 1) {
                $(this).fadeOut(function() {
                    $(this).html(nbPlayers.toString() + "/" + nbPlayersMax.toString());
                    $(this).fadeIn();
                })
            }
            else if (index == 2) {
                if (nbPlayers == nbPlayersMax) {
                    $(this).children(":first").attr("disabled", true)
                        .attr("class", "validate btn btn-secondary");
                }
                $(this).attr("nbPlayers", nbPlayers);
            }

            index += 1;
        });
    };


    /*
        --------------- LISTEN EVENTS ---------------
    */


    /*
        Évènement reçu lorsqu'un nouveau message est reçu. Ce-dernier est par conséquent ajouté
        dans le chat.
    */

    socket.on('newMessage', function(data) {
        appendMessage(data.pseudo, data.message, false);
        document.getElementById("messages").lastChild.scrollIntoView(false);
    });


    /*
        Évènement reçu lorsqu'un nouveau joueur se connecte dans la partie. Un message de connexion est
        alors ajouté dans le chat.
    */

    socket.on('newPlayer', function(pseudo) {
        appendMessage(pseudo, "", true);
        document.getElementById("messages").lastChild.scrollIntoView(false);
    });


    /*
        Évènement reçu lorsqu'une nouvelle partie est créée. Cette dernière est ajoutée à la liste des parties.

        À noter que l'action n'est réalisée que lorsque le menu des parties en cours est affiché, afin
        de ne pas réaliser des tâches en fonds pour des questions d'optimisation, bien que dans notre cas,
        peu de parties seront jouées en simultanées.
    */

    socket.on('newGame', function(data) {
        if (rejoindreDisplayed) {
            appendGame(data.gameName, 1, data.nbPlayersMax);
        }
    });


    /*
        Évènement reçu lorsque des informations sur une parties doivent être modifiées,
        lorsqu'un joueur s'est connecté à cette dernière.

        À noter que l'action n'est réalisée que lorsque le menu des parties en cours est affiché, afin
        de ne pas réaliser des tâches en fonds pour des questions d'optimisation, bien que dans notre cas,
        peu de parties seront jouées en simultanées.
    */

    socket.on('updateGame', function(data) {
        if (rejoindreDisplayed)  {
            updateGameDatas(data.gameName, data.nbPlayers, data.nbPlayersMax);
        }
    });


    /*
        Évènement reçu lorsque les informations sur les parties actuelles ont été demandées. Permet
        d'afficher la liste des parties en cours.
    */

    socket.on('gamesAsked', function(games) {
        games.forEach(function(game) {
            appendGame(game[0], game[1], game[2]);
        });
    });


    /*

    */

    socket.on('newAlertMessage', function(message) {
        $.notify(message, "warn");
    })


    /*

    */

    socket.on('connexionOk', function(data) {
        pseudo = data.pseudo;
        var confirmed = data.confirmed;
        isConnected = true;

        $("#inputPseudo").hide();

        var p = $("<p />");
        $("#affichagePseudo").append(p.html(pseudo));
        $("#affichagePseudo").show();


        displayMenu("connexion");
        if(confirmed == false){
            $('#formBtnsMenu').hide();
            displayMenu("confirmation");
        }
        $('#btnsInscrCo').hide();
    });


    /*

    */

    socket.on('confirmationOK', function() {
        displayMenu("confirmation");
        $('#formBtnsMenu').show();
    });


    /*
        --------------- LISTEN ACTIONS OF PLAYER ---------------
    */


    /*
        Affiche le menu de création de partie lorsque le bouton creation est enclenché.
    */

    $("#creationBtn").click(function(e) {
        displayMenu("creation");
        return false;
    });


    /*
        Affiche le menu des parties lorsque le bouton rejoindre est enclenché.
    */

    $("#rejoindreBtn").click(function(e) {
        displayMenu("rejoindre");
        return false;
    });


    /*
        Affiche le menu d'inscription lorsque le bouton inscription est enclenché.
    */

    $("#inscriptionBtn").click(function(e) {
        displayMenu("inscription");
    });


    /*
        Affiche le menu de connexion lorsque le bouton connexion est enclenché.
    */

    $("#connexionBtn").click(function(e) {
        displayMenu("connexion");
    });

    /*
        Appelé lorsque un message est envoyé, ce-dernier est transmis au serveur afin d'être distribué
        à tous les uatres joueurs de la partie actuelle, et ajoute ce message au chat de la personne qui
        l'envoie, sans passer par le serveur.
    */

    $('#formSendMessage').submit(function () {
        socket.emit('newMessage', { gameName: actualGameName,
            message: $('#message').val() });
        appendMessage(pseudo, $('#message').val());


        document.getElementById("messages").lastChild.scrollIntoView(false);
        $('#message').val('');

        return false;
    });


    /*
        Appelé lors de la création d'une partie lorsque le formulaire de création est submit.
        Envoie l'information au serveur qu'une nouvelle partie a été crée, et switch l'écran actuel
        du menu au plateau de jeu.
    */

    $('#creation').submit(function () {
        if (hasPseudo()) {
            actualGameName = $('#gameName').val();
            socket.emit('newGame', { gameName: $('#gameName').val(),
                nbPlayersMax: parseInt($('#nbPlayersMax').val()),
                pseudo: pseudo });

            $("#menu").fadeOut(function() {
                $('#gameName').val('');
                $("#board").fadeIn();
            });
        }

        return false;
    });


    /*

    */

    $("#inscription").submit(function() {
        if ($('#pwd').val() == $('#conf_pwd').val()) {
            socket.emit('createAccount', { username : $('#pseudoInscription').val() ,
                email : $('#email').val() ,
                password : $('#pwd').val() });

            displayMenu("inscription");
            $('#pseudoInscription').val('');
            $('#email').val('');
            $('#pwd').val('');
            $('#conf_pwd').val('');
        }
        else {
            $.notify("Les mots de passes sont différents !", "warn");
        }

        return false;
    });


    /*

    */

    $("#connexion").submit(function() {
        socket.emit('connexion', { email_con : $('#email_con').val() ,
            pwd_con : $('#pwd_con').val() });

        return false;
    });

    /*

    */

    $("#confirmation").submit(function() {
        socket.emit('confirmation', { pseudo : pseudo,
            codeConfirmation : $('#codeConfirmation').val() });

        return false;
    });
</script>
</body>
</html>
